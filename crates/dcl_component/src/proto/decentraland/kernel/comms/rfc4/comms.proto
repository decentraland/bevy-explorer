// This file maps to the definition in https://rfc.decentraland.org/rfc/RFC-4
// It is mandatory to also update that RFC when modifying this file

syntax = "proto3";

package decentraland.kernel.comms.rfc4;

message Packet {
  oneof message {
    Position position = 1;
    AnnounceProfileVersion profile_version = 2;
    ProfileRequest profile_request = 3;
    ProfileResponse profile_response = 4;
    Chat chat = 5;
    Scene scene = 6;
    Voice voice = 7;
    Movement movement = 8;
    PlayerEmote player_emote = 9;
    SceneEmote scene_emote = 10;
    MovementCompressed movement_compressed = 12;
  }
  uint32 protocol_version = 11;
}

message Position {
  // command number
  uint32 index = 1;
  // world position
  float position_x = 3;
  float position_y = 4;
  float position_z = 5;
  // quaternion
  float rotation_x = 6;
  float rotation_y = 7;
  float rotation_z = 8;
  float rotation_w = 9;
}

message Movement {
  // command number
  float timestamp = 1;
  // world position
  float position_x = 2;
  float position_y = 3;
  float position_z = 4;
  // velocity
  float velocity_x = 5;
  float velocity_y = 6;
  float velocity_z = 7;
  // animations
  float movement_blend_value = 8;
  float slide_blend_value = 9;
  bool is_grounded = 10;
  bool is_jumping = 11;
  bool is_long_jump = 12;
  bool is_long_fall = 13;
  bool is_falling = 14;

  bool is_stunned = 15;
  
  float rotation_y = 16;
}

message MovementCompressed {
  int32 temporal_data = 1; // bit-compressed: timestamp + animations 
  int64 movement_data = 2; // bit-compressed: position + velocity 
}

message PlayerEmote {
  uint32 incremental_id = 1;
  string urn = 2;
}

message SceneEmote {
  string scene_entity_id = 1;
  string source = 2;
}

message AnnounceProfileVersion {
  uint32 profile_version = 1;

  // Extension: optional download_url to fetch the profile from a profile service
  // optional string download_url = 2;
}

message ProfileRequest {
  string address = 4;
  uint32 profile_version = 3;
}

message ProfileResponse {
  string serialized_profile = 1;
  string base_url = 2;

  // Extension: when Lambdas serializes profiles for the RPC, we could extend
  // this format to prevent transmitting the serialized JSON and leverage protobuf
  // directly
  // Profile profile = 2;
}

message Chat {
  string message = 1;
  double timestamp = 2;
}

message Scene {
  string scene_id = 1;
  bytes data = 2;
}

message Voice {
  bytes encoded_samples = 1;
  uint32 index = 2;
  VoiceCodec codec = 3;
  enum VoiceCodec {
    VC_OPUS = 0;
  }
}
